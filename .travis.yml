language: cpp

os:
  - linux
  - osx

dist: bionic

addons:
  apt:
    sources:
      # sources list: https://github.com/travis-ci/apt-source-safelist/blob/master/ubuntu.json
      - sourceline: 'ppa:qbittorrent-team/qbt-libtorrent-travisci'
    packages:
      # packages list: https://github.com/travis-ci/apt-package-safelist/blob/master/ubuntu-trusty
      - [autoconf, automake, colormake]
      - [libboost-dev, libboost-system-dev]
      - libssl-dev
      - [qtbase5-dev, libqt5svg5-dev, qttools5-dev]
      - zlib1g-dev

before_install:
  # only allow specific build for coverity scan, others will stop
  - if [ "$TRAVIS_BRANCH" = "$coverity_branch" ] && ! [ "$TRAVIS_OS_NAME" = "linux" -a "$libt_branch" = "RC_1_2" -a "$gui" = "true" -a "$build_system" = "qmake" ]; then exit ; fi

  - shopt -s expand_aliases
  - alias make="colormake -j2" # Using nprocs/2 sometimes may fail (gcc is killed by system)
  - qbt_path="$HOME/qbt_install"
  - qmake_conf="$qmake_conf --prefix=$qbt_path"
  - cmake_conf="$cmake_conf -DCMAKE_INSTALL_PREFIX=$qbt_path"

  # options for specific branches
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      # setup virtual display for after_success target
      if [ "$gui" = "true" ]; then export "DISPLAY=:99.0" && /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16 ; fi ;

    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      CXXFLAGS="$CXXFLAGS -Wno-unused-local-typedefs"

      openssl_root_path="/usr/local/opt/openssl"
      qmake_conf="$qmake_conf PKG_CONFIG_PATH=$openssl_root_path/lib/pkgconfig:$PKG_CONFIG_PATH"
      cmake_conf="$cmake_conf -DOPENSSL_ROOT_DIR=$openssl_root_path"
    fi
  - |
    if [ "$gui" = "false" ]; then
      qmake_conf="$qmake_conf --disable-gui"
      cmake_conf="$cmake_conf -DCMAKE_DISABLE_FIND_PACKAGE_Qt5Widgets=ON"
    fi

  # print settings
  - echo $libt_branch
  - echo $gui
  - echo $build_system
  - echo $qmake_conf
  - echo $cmake_conf

install:
- curl -sSkL --compressed https://raw.githubusercontent.com/engnr/qt-downloader/master/qt-downloader | python3 - linux desktop latest gcc_64 -o "${HOME}/Qt" -m qtbase qttools qtsvg icu
- export QT_BASE_DIR="$(ls -rd "${HOME}/Qt"/*/gcc_64 | head -1)"
- export QTDIR=$QT_BASE_DIR
- export PATH=$QT_BASE_DIR/bin:$PATH
- export LD_LIBRARY_PATH=$QT_BASE_DIR/lib:$LD_LIBRARY_PATH
- export PKG_CONFIG_PATH=$QT_BASE_DIR/lib/pkgconfig:$PKG_CONFIG_PATH
- export QT_QMAKE="${QT_BASE_DIR}/bin"
- sed -i.bak 's/Enterprise/OpenSource/g;s/licheck.*//g' "${QT_BASE_DIR}/mkspecs/qconfig.pri"

script:
- mkdir -p /tmp/libtorrent-rasterbar
- |
  [ -f /tmp/libtorrent-rasterbar/.unpack_ok ] || \
      curl -ksSfL https://github.com/arvidn/libtorrent/archive/HEAD.tar.gz | \
      tar -zxf - -C /tmp/libtorrent-rasterbar --strip-components 1
- touch "/tmp/libtorrent-rasterbar/.unpack_ok"
- cd "/tmp/libtorrent-rasterbar/"
- CXXFLAGS="-std=c++14" CPPFLAGS="-std=c++14" ./bootstrap.sh --prefix=/usr --with-boost-libdir="/usr/lib" --disable-debug --disable-dependency-tracking --disable-silent-rules --disable-maintainer-mode --with-libiconv
- make clean
- make -j$(nproc) V=0
- sudo make uninstall
- sudo make install
- cd "${TRAVIS_BUILD_DIR}"
- ./configure --prefix=/tmp/qbee/AppDir/usr --with-boost-libdir="/usr/lib" || (cat config.log && exit 1)
- make install -j$(nproc)
- '[ -x "/tmp/linuxdeploy-x86_64.AppImage" ] || curl -LC- -o /tmp/linuxdeploy-x86_64.AppImage "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"'
- '[ -x "/tmp/linuxdeploy-plugin-qt-x86_64.AppImage" ] || curl -LC- -o /tmp/linuxdeploy-plugin-qt-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage'
- chmod -v +x '/tmp/linuxdeploy-plugin-qt-x86_64.AppImage' '/tmp/linuxdeploy-x86_64.AppImage'
- cd "/tmp/qbee"
- mkdir -p "/tmp/qbee/AppDir/apprun-hooks/"
- echo 'export XDG_DATA_DIRS="${APPDIR:-"$(dirname "${BASH_SOURCE[0]}")/.."}/usr/share:${XDG_DATA_DIRS}:/usr/share:/usr/local/share"' > "/tmp/qbee/AppDir/apprun-hooks/xdg_data_dirs.sh"
- APPIMAGE_EXTRACT_AND_RUN=1 UPDATE_INFORMATION="zsync|https://github.com/${TRAVIS_REPO_SLUG}/releases/latest/download/qBittorrent-Enhanced-Edition.AppImage.zsync" OUTPUT='qBittorrent-Enhanced-Edition.AppImage' /tmp/linuxdeploy-x86_64.AppImage --appdir="/tmp/qbee/AppDir" --output=appimage --plugin qt

deploy:
  provider: releases
  overwrite: true
  api_key: "${GITHUB_TOKEN}"
  file:
  - qBittorrent-Enhanced-Edition.AppImage
  - qBittorrent-Enhanced-Edition.AppImage.zsync
  on:
    all_branches: true
    tags: true
